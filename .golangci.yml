run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  govet:
    enable-all: true
    disable:
      - fieldalignment # Can be too noisy
      - shadow

  gocyclo:
    min-complexity: 15

  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true

  gofmt:
    simplify: true

  goimports:
    local-prefixes: github.com/borovikovd/go-msort

  lll:
    line-length: 120
    tab-width: 4

  misspell:
    locale: US
    ignore-words:
      - msort

  revive:
    rules:
      - name: exported
        disabled: true  # Too noisy for this project
      - name: package-comments
        disabled: true  # Too noisy for this project

  wsl:
    strict-append: false
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-case-trailing-whitespace: true
    allow-cuddle-declarations: true
    allow-trailing-comment: true

  gosec:
    excludes:
      - G306 # File permissions - we want 0644 for output files

linters:
  disable-all: true
  enable:
    # Error detection
    - errcheck          # Check for unchecked errors
    - gosec            # Security issues (with exclusions)
    - govet            # Standard Go vet checks
    - ineffassign      # Detect ineffectual assignments
    - typecheck        # Type checking errors
    
    # Code quality
    - gocyclo          # Cyclomatic complexity
    - goconst          # Repeated strings that could be constants
    - gofmt            # Check if code is gofmt'd
    - goimports        # Check if imports are sorted
    - staticcheck      # Advanced static analysis
    - unused           # Check for unused constants, variables, functions and types
    
    # Style (less strict)
    - misspell         # Finds commonly misspelled English words
    - unconvert        # Remove unnecessary type conversions
    
    # Performance
    - prealloc         # Find slice declarations that could potentially be preallocated
    
    # Best practices
    - gosimple         # Simplify code

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  uniq-by-line: true
  
  exclude-use-default: true
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - gosec
        - goconst
        - lll
        - prealloc

    # Exclude issues in testdata
    - path: testdata/
      linters:
        - stylecheck
        - revive
        - unused
        - deadcode
        - varcheck
        - staticcheck

    # Allow globals in main package
    - path: main\.go
      text: "should not use ALL_CAPS in Go names"

    # Specific exclusions for analysis code
    - path: pkg/analyzer/
      text: "cognitive complexity"
      linters:
        - gocyclo

    # Allow octal literals in file permissions
    - text: "use new octal literal style"
      linters:
        - gocritic

  # Show only new issues if this is a PR/MR
  new: false
  
  # Fix found issues (if possible)
  fix: false

severity:
  default-severity: error
  case-sensitive: false